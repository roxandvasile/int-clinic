{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/components/confirmation-dialog/confirmation-dialog.component.ts","./src/app/core/components/confirmation-dialog/confirmation-dialog.component.html","./src/app/core/components/home-page/home-page.component.ts","./src/app/core/components/home-page/home-page.component.html","./src/app/core/components/navigation-bar/navigation-bar.component.ts","./src/app/core/components/navigation-bar/navigation-bar.component.html","./src/app/core/modules/user/components/user-forgot-password/user-forgot-password.component.ts","./src/app/core/modules/user/components/user-forgot-password/user-forgot-password.component.html","./src/app/core/modules/user/components/user-login/user-login.component.ts","./src/app/core/modules/user/components/user-login/user-login.component.html","./src/app/core/modules/user/components/user-sign-up/user-sign-up.component.ts","./src/app/core/modules/user/components/user-sign-up/user-sign-up.component.html","./src/app/core/modules/user/components/user-verify-email/user-verify-email.component.ts","./src/app/core/modules/user/components/user-verify-email/user-verify-email.component.html","./src/app/core/modules/user/components/user.component.ts","./src/app/core/modules/user/components/user.component.html","./src/app/core/modules/user/user-routing.module.ts","./src/app/core/services/auth.service.ts","./src/app/core/services/doctor.service.ts","./src/app/core/services/image-upload.service.ts","./src/app/core/shared/auth.guard.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomePageComponent } from './core/components/home-page/home-page.component';\r\nimport { doctorAuthGuardChild, patientAuthGuardChild, adminAuthGuardChild } from './core/shared/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'homepage',\r\n    component: HomePageComponent,\r\n  },\r\n  {\r\n    path: 'admin',\r\n    canActivateChild: [adminAuthGuardChild, patientAuthGuardChild, doctorAuthGuardChild],\r\n    loadChildren: () => import('./core/modules/admin/admin.module').then(m => m.AdminModule),\r\n  },\r\n  {\r\n    path: 'patient',\r\n    canActivateChild: [patientAuthGuardChild],\r\n    loadChildren: () => import('./core/modules/patient/patient.module').then(m => m.PatientModule),\r\n  },\r\n  {\r\n    path: 'doctor',\r\n    canActivateChild: [doctorAuthGuardChild],\r\n    loadChildren: () => import('./core/modules/doctor/doctor.module').then(m => m.DoctorModule),\r\n  },\r\n  {\r\n    path: 'user',\r\n    loadChildren: () => import('./core/modules/user/user.module').then(m => m.UserModule),\r\n  },\r\n  {\r\n    path: '',\r\n    component: HomePageComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {}\r\n","<app-navigation-bar></app-navigation-bar>\r\n<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { initializeApp, provideFirebaseApp } from '@angular/fire/app';\r\nimport { environment } from '../environments/environment';\r\nimport { provideAuth, getAuth } from '@angular/fire/auth';\r\nimport { AngularFireAuthModule } from '@angular/fire/compat/auth';\r\nimport { provideFirestore, getFirestore } from '@angular/fire/firestore';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthService } from './core/services/auth.service';\r\nimport { FIREBASE_OPTIONS } from '@angular/fire/compat';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { DoctorService } from './core/services/doctor.service';\r\nimport { ConfirmationDialogComponent } from './core/components/confirmation-dialog/confirmation-dialog.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { HomePageComponent } from './core/components/home-page/home-page.component';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { UserRoutingModule } from './core/modules/user/user-routing.module';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NavigationBarComponent } from './core/components/navigation-bar/navigation-bar.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, ConfirmationDialogComponent, HomePageComponent, NavigationBarComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\r\n    provideAuth(() => getAuth()),\r\n    provideFirestore(() => getFirestore()),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    BrowserAnimationsModule,\r\n    AngularFireAuthModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    UserRoutingModule,\r\n    MatMenuModule,\r\n  ],\r\n  providers: [AuthService, DoctorService, { provide: FIREBASE_OPTIONS, useValue: environment.firebase }],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-confirmation-dialog',\r\n  templateUrl: './confirmation-dialog.component.html',\r\n  styleUrls: ['./confirmation-dialog.component.scss'],\r\n})\r\nexport class ConfirmationDialogComponent {\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA)\r\n    public data: {\r\n      cancelText: string;\r\n      confirmText: string;\r\n      message: string;\r\n      title: string;\r\n    },\r\n    private dialogRef: MatDialogRef<ConfirmationDialogComponent>\r\n  ) {}\r\n\r\n  public cancel() {\r\n    this.close(false);\r\n  }\r\n  public close(value: boolean) {\r\n    this.dialogRef.close(value);\r\n  }\r\n  public confirm() {\r\n    this.close(true);\r\n  }\r\n}\r\n","<div class=\"header\">\r\n  <h1 mat-dialog-title>{{ data.title }}</h1>\r\n</div>\r\n<div mat-dialog-content>\r\n  <p class=\"dialog-message\">{{ data.message }}</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button mat-dialog-close (click)=\"cancel()\">{{ data.cancelText }}</button>\r\n  <button mat-button mat-dialog-close (click)=\"confirm()\">{{ data.confirmText }}</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Doctor } from '../../interfaces/doctor.interface';\r\nimport { Patient } from '../../interfaces/patient.interface';\r\nimport { Admin } from '../../interfaces/admin.interface';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.scss'],\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n  loggedUser!: Doctor | Patient | Admin | null;\r\n  isAdmin!: boolean;\r\n  isPatient!: boolean;\r\n  isDoctor!: boolean;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.authService.user$.subscribe(user => {\r\n      this.loggedUser = user;\r\n      this.isAdmin = this.loggedUser?.role === 'admin' ? true : false;\r\n      this.isPatient = this.loggedUser?.role === 'patient' ? true : false;\r\n      this.isDoctor = this.loggedUser?.role === 'doctor' ? true : false;\r\n    });\r\n  }\r\n\r\n  onClickGetAppoinment(): void {\r\n    this.router.navigate(['patient/appointment']);\r\n  }\r\n\r\n  onClickManageSite(): void {\r\n    this.router.navigate(['doctor']);\r\n  }\r\n}\r\n","<div class=\"sections-container\">\r\n  <section class=\"first-section\">\r\n    <h1 class=\"title-homepage\">\r\n      Îndrumăm spre sănătate, <br />\r\n      Îndrumăm spre viață\r\n    </h1>\r\n    <p class=\"lorem-homepage\">\r\n      Înființate cu grijă și dedicare, clinicile noastre se angajează să va ofere îngrijire medicală de calitate\r\n      superioară într-un mediu prietenos și modern. Profesioniști medicali cu experiență combină cunoștințele avansate\r\n      cu compasiunea pentru a asigura sănătatea și binele pacienților lor.\r\n    </p>\r\n\r\n    <div *ngIf=\"!loggedUser || isPatient\" class=\"btns\">\r\n      <div>\r\n        <button id=\"firstBtn\" mat-flat-button color=\"primary\" (click)=\"onClickGetAppoinment()\">\r\n          Fă-ți o programare | +\r\n        </button>\r\n      </div>\r\n\r\n      <div *ngIf=\"!loggedUser || isDoctor\">\r\n        <button id=\"secondBtn\" mat-flat-button color=\"warn\" (click)=\"onClickManageSite()\">Intră in cont</button>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <section class=\"second-section\">\r\n    <img src=\"../../../../assets/Doctors-bro.png\" alt=\"\" width=\"500px\" height=\"500px\" />\r\n  </section>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Patient } from '../../interfaces/patient.interface';\r\nimport { Router } from '@angular/router';\r\nimport { Doctor } from '../../interfaces/doctor.interface';\r\nimport { Admin } from '../../interfaces/admin.interface';\r\n\r\n@Component({\r\n  selector: 'app-navigation-bar',\r\n  templateUrl: './navigation-bar.component.html',\r\n  styleUrls: ['./navigation-bar.component.scss'],\r\n})\r\nexport class NavigationBarComponent implements OnInit {\r\n  loggedUser!: Doctor | Patient | Admin | null;\r\n  isAdmin!: boolean;\r\n  isPatient!: boolean;\r\n  isDoctor!: boolean;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.authService.user$.subscribe(user => {\r\n      this.loggedUser = user;\r\n      this.isAdmin = this.loggedUser?.role === 'admin' ? true : false;\r\n      this.isPatient = this.loggedUser?.role === 'patient' ? true : false;\r\n      this.isDoctor = this.loggedUser?.role === 'doctor' ? true : false;\r\n    });\r\n  }\r\n\r\n  onLogOut() {\r\n    this.authService.signOut();\r\n    this.router.navigate(['login']);\r\n  }\r\n}\r\n","<mat-toolbar>\r\n  <ul>\r\n    <li><a routerLink=\"\" routerLinkActive=\"activeNav\" [routerLinkActiveOptions]=\"{ exact: true }\">Acasă</a></li>\r\n    <li *ngIf=\"isAdmin\"><a routerLink=\"admin\" routerLinkActive=\"activeNav\">Admin</a></li>\r\n    <li *ngIf=\"!loggedUser || isPatient\">\r\n      <a routerLink=\"patient/dashboard/current\" routerLinkActive=\"activeNav\">Pacient</a>\r\n    </li>\r\n    <li *ngIf=\"!loggedUser || isDoctor\">\r\n      <a routerLink=\"doctor/dashboard/current\" routerLinkActive=\"activeNav\">Doctor</a>\r\n    </li>\r\n  </ul>\r\n\r\n  <div class=\"right-menu\">\r\n    <div *ngIf=\"!loggedUser\">\r\n      <button mat-button [matMenuTriggerFor]=\"menu1\">\r\n        <mat-icon clasa=\"login-icon\">account_circle </mat-icon>\r\n      </button>\r\n\r\n      <mat-menu #menu1=\"matMenu\">\r\n        <button mat-menu-item routerLink=\"login\">\r\n          <mat-icon clasa=\"login-icon\">account_circle </mat-icon>\r\n          Login\r\n        </button>\r\n\r\n        <button mat-menu-item routerLink=\"sign-up\">\r\n          <mat-icon class=\"login-icon\">account_circle </mat-icon>\r\n          SignUp\r\n        </button>\r\n      </mat-menu>\r\n    </div>\r\n\r\n    <div class=\"user-profile\" *ngIf=\"loggedUser\">\r\n      <span class=\"username\"></span>\r\n      <button mat-button [matMenuTriggerFor]=\"menu2\">\r\n        Bine ai venit,\r\n        {{ loggedUser.displayName }}\r\n        <mat-icon class=\"login-icon\">account_circle </mat-icon>\r\n      </button>\r\n\r\n      <mat-menu #menu2=\"matMenu\">\r\n        <a\r\n          [routerLink]=\"isPatient ? 'patient/dashboard/current' : isDoctor ? 'doctor/dashboard/current' : 'admin'\"\r\n          mat-menu-item>\r\n          <mat-icon class=\"login-icon\">account_circle </mat-icon>\r\n          Contul meu\r\n        </a>\r\n        <button mat-menu-item (click)=\"onLogOut()\">\r\n          <mat-icon class=\"login-icon\">account_circle </mat-icon>\r\n          LogOut\r\n        </button>\r\n      </mat-menu>\r\n    </div>\r\n  </div>\r\n</mat-toolbar>\r\n","import { Component } from '@angular/core';\r\nimport { AuthService } from 'src/app/core/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-user-forgot-password',\r\n  templateUrl: './user-forgot-password.component.html',\r\n  styleUrls: ['./user-forgot-password.component.scss'],\r\n})\r\nexport class UserForgotPasswordComponent {\r\n  email = '';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  resetPassword() {\r\n    this.authService\r\n      .sendPasswordResetEmail(this.email)\r\n      .then(() => {\r\n        console.log('Password reset email sent.');\r\n      })\r\n      .catch(error => {\r\n        console.error('Error sending password reset email:', error);\r\n      });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"authBlock\">\r\n    <h2>Ai uitat parola?</h2>\r\n    <p class=\"text-center\">\r\n      Introdu adresa de e-mail pe care ai folosit-o când te-ai înregistrat și îți vom trimite instrucțiuni pentru a-ți\r\n      reseta parola.\r\n    </p>\r\n\r\n    <p>\r\n      Din motive de securitate, NU vă vom stoca parola. Prin urmare, fiți siguri că nu vă vom trimite niciodată parola\r\n      prin e-mail.\r\n    </p>\r\n\r\n    <form (ngSubmit)=\"resetPassword()\" #resetForm=\"ngForm\">\r\n      <label for=\"email\">Adresa de email</label>\r\n      <br />\r\n      <input type=\"email\" id=\"email\" name=\"email\" matInput required [(ngModel)]=\"email\" required />\r\n      <br />\r\n      <button type=\"submit\" mat-raised-button color=\"warn\" [disabled]=\"!resetForm.valid\">Resetează</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { User } from '@angular/fire/auth';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/core/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-user-login',\r\n  templateUrl: './user-login.component.html',\r\n  styleUrls: ['./user-login.component.scss'],\r\n})\r\nexport class UserLoginComponent {\r\n  hide = true;\r\n\r\n  users: User[] = [];\r\n\r\n  email = '';\r\n  password = '';\r\n\r\n  error: { message: string } = { message: '' };\r\n\r\n  loginForm = new FormGroup({\r\n    email: new FormControl('', [Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]),\r\n    password: new FormControl('', { validators: Validators.required }),\r\n  });\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  onLogin() {\r\n    const email = this.loginForm.controls.email.value as string;\r\n    const password = this.loginForm.controls.password.value as string;\r\n\r\n    this.authService\r\n      .signIn(email, password)\r\n      .then(() => {\r\n        return this.authService.getCurrentUserUid().then(data => {\r\n          this.authService.getUserRole(data).subscribe(role => {\r\n            if (role === 'patient') {\r\n              this.router.navigate(['patient/dashboard/current']);\r\n            }\r\n            if (role === 'doctor') {\r\n              this.router.navigate(['doctor/dashboard/current']);\r\n            }\r\n            if (role === 'admin') {\r\n              this.router.navigate(['admin']);\r\n            }\r\n          });\r\n        });\r\n      })\r\n      .catch(error => {\r\n        if (error.code === 'auth/user-not-found') {\r\n          this.error.message = 'User-ul nu a fost găsit.';\r\n        } else if (error.code === 'auth/invalid-email') {\r\n          this.error.message = 'Email obligatoriu';\r\n        } else if (error.code === 'auth/invalid-password') {\r\n          this.error.message = 'Parolă obligatorie';\r\n        } else if (error.code === 'auth/wrong-password' || error.code === 'auth/invalid-email') {\r\n          this.error.message = 'Email sau parolă incorecte. Te rog să încerci din nou';\r\n        } else if (error.code === 'auth/missing-password') {\r\n          this.error.message = 'Parolă obligatorie';\r\n        } else if (error.code === 'auth/too-many-requests') {\r\n          this.error.message = 'Cont blocat, numărul de cereri depășite';\r\n        } else {\r\n          this.error.message = 'Eroare internă, te rog să încerci mai târziu';\r\n        }\r\n      });\r\n  }\r\n\r\n  onLoginWithGoogle() {\r\n    this.authService.patientGoogleSignIn().then(() => {\r\n      this.router.navigate(['patient/dashboard/current']);\r\n    });\r\n  }\r\n\r\n  onRouterSignUp() {\r\n    this.router.navigate(['sign-up']);\r\n  }\r\n}\r\n","<section class=\"page-container\">\r\n  <h1>Conectează-te in contul tău</h1>\r\n\r\n  <div class=\"form-login-container\">\r\n    <button id=\"googleLogin\" mat-raised-button color=\"warn\" (click)=\"onLoginWithGoogle()\">Google Login</button>\r\n\r\n    <hr class=\"divider sign-in\" />\r\n\r\n    <form class=\"example-form\" [formGroup]=\"loginForm\">\r\n      <p id=\"error\">{{ error.message }}</p>\r\n\r\n      <mat-form-field class=\"login-full-width\">\r\n        <mat-label>Email</mat-label>\r\n        <input type=\"email\" matInput placeholder=\"nume@mail.com\" required formControlName=\"email\" />\r\n        <mat-icon matSuffix>alternate_email</mat-icon>\r\n        <mat-error *ngIf=\"loginForm.get('email')?.hasError('pattern')\">Email Invalid</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"login-full-width\">\r\n        <mat-label>Parola</mat-label>\r\n        <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" />\r\n        <button\r\n          type=\"button\"\r\n          mat-icon-button\r\n          matSuffix\r\n          (click)=\"hide = !hide\"\r\n          [attr.aria-label]=\"'Hide password'\"\r\n          [attr.aria-pressed]=\"hide\">\r\n          <mat-icon>{{ hide ? 'visibility_off' : 'visibility' }}</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n\r\n      <div class=\"forgotPassword\">\r\n        <a routerLink=\"/forgot-password\">Ai uitat parola?</a>\r\n      </div>\r\n\r\n      <button mat-raised-button id=\"loginBtn\" color=\"primary\" (click)=\"onLogin()\">Login</button>\r\n      <span id=\"signUpLink\">Nu ai un cont? <a routerLink=\"/sign-up\">Signup</a></span>\r\n    </form>\r\n  </div>\r\n</section>\r\n<router-outlet></router-outlet>\r\n","import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/core/services/auth.service';\r\nimport { ImageUploadService } from 'src/app/core/services/image-upload.service';\r\n\r\n@Component({\r\n  selector: 'app-user-sign-up',\r\n  templateUrl: './user-sign-up.component.html',\r\n  styleUrls: ['./user-sign-up.component.scss'],\r\n})\r\nexport class UserSignUpComponent {\r\n  patientImage = '';\r\n\r\n  hide = true;\r\n\r\n  error: { message: string } = { message: '' };\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private imageUploadService: ImageUploadService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  signUpForm = new FormGroup({\r\n    lastName: new FormControl('', { nonNullable: true, validators: Validators.required }),\r\n    firstName: new FormControl('', { nonNullable: true, validators: Validators.required }),\r\n    gender: new FormControl('', { nonNullable: true, validators: Validators.required }),\r\n    phone: new FormControl('', {\r\n      nonNullable: true,\r\n      validators: [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{3}( ?)[0-9]{3}( ?)[0-9]{4}$')],\r\n    }),\r\n    email: new FormControl('', {\r\n      nonNullable: true,\r\n      validators: [\r\n        Validators.required,\r\n        Validators.email,\r\n        Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$'),\r\n      ],\r\n    }),\r\n    password: new FormControl('', { nonNullable: true, validators: Validators.required }),\r\n    imageUrl: new FormControl('', { nonNullable: true }),\r\n  });\r\n\r\n  onSignUp() {\r\n    this.authService\r\n      .pacientSignUp(this.signUpForm.controls.password.value, {\r\n        ...this.signUpForm.getRawValue(),\r\n        imageUrl: this.patientImage,\r\n      })\r\n      .then(() => {\r\n        this.router.navigate(['patient/dashboard/details']);\r\n        this.signUpForm.reset();\r\n      })\r\n      .catch(error => {\r\n        if (error.code === 'auth/email-already-in-use') {\r\n          this.error.message = 'Adresă de email deja înregistrată în baza noastra de date. Te rog încearcă cu alta.';\r\n        } else if (error.code === 'auth/invalid-email') {\r\n          this.error.message = 'Adresă de email invalidă.';\r\n        } else if (error.code === 'auth/weak-password') {\r\n          this.error.message = 'Parolă prea scurtă. Parola trebuie să aibă minim 6 caractere.';\r\n        } else if (error.code === 'auth/invalid-photo-url') {\r\n          this.error.message = 'URL-ul pozei este invalid. Încearcă alta te rog.';\r\n        } else if (error.code === 'auth/invalid-phone-number') {\r\n          this.error.message = 'Numarul de telefon intrudus este invalid. Formatul trebuie sa fie 07xx xxx xxx';\r\n        } else if (error.code === 'auth/phone-number-already-exists') {\r\n          this.error.message = 'Numărul de telefon este deja înregistrat. Te rog încearcă cu altul.';\r\n        } else {\r\n          this.error.message = 'Eroare internă, te rog sa încerci mai târziu';\r\n        }\r\n      });\r\n  }\r\n\r\n  uploadImage(event: Event) {\r\n    const file = (event?.target as HTMLInputElement).files?.[0];\r\n    if (!file) {\r\n      return;\r\n    }\r\n\r\n    this.imageUploadService.uploadImage(file, 'doctors').subscribe(downloadURL => {\r\n      this.patientImage = downloadURL;\r\n    });\r\n  }\r\n}\r\n","<div class=\"form-container\">\r\n  <form class=\"example-form\" [formGroup]=\"signUpForm\" (ngSubmit)=\"onSignUp()\">\r\n    <div class=\"imageContainer\">\r\n      <img *ngIf=\"patientImage\" [src]=\"patientImage\" alt=\"Imagine Doctor Neincarcata\" width=\"50%\" height=\"50%\" />\r\n      <label for=\"fileInput\" class=\"fileLabel\"> Incarca o imagine </label>\r\n      <input type=\"file\" accept=\".png,.jpg\" (change)=\"uploadImage($event)\" formControlName=\"imageUrl\" id=\"fileInput\" />\r\n    </div>\r\n    <div *ngIf=\"error.message\" class=\"error-message\">\r\n      {{ error.message }}\r\n    </div>\r\n    <mat-form-field class=\"example-full-width\">\r\n      <mat-label>Nume</mat-label>\r\n      <input matInput formControlName=\"lastName\" placeholder=\"Nume\" />\r\n      <mat-icon matSuffix>person</mat-icon>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"example-full-width\">\r\n      <mat-label>Prenume</mat-label>\r\n      <input matInput formControlName=\"firstName\" placeholder=\"Prenume\" />\r\n      <mat-icon matSuffix>person</mat-icon>\r\n    </mat-form-field>\r\n\r\n    <mat-radio-group formControlName=\"gender\">\r\n      <mat-radio-button value=\"Masculin\">Masculin</mat-radio-button>\r\n      <mat-radio-button value=\"Feminin\">Feminin</mat-radio-button>\r\n      <mat-radio-button value=\"Altul\">Altul</mat-radio-button>\r\n    </mat-radio-group>\r\n\r\n    <mat-form-field class=\"example-full-width\">\r\n      <mat-label>Telefon</mat-label>\r\n      <input type=\"tel\" formControlName=\"phone\" matInput placeholder=\"0712 345 678\" />\r\n      <mat-icon matSuffix>mode_edit</mat-icon>\r\n      <mat-error *ngIf=\"signUpForm.get('phone')?.hasError('pattern')\">Număr de telefon invalid</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"example-full-width\">\r\n      <mat-label>Email</mat-label>\r\n      <input type=\"email\" formControlName=\"email\" #email matInput placeholder=\"nume@mail.com\" required />\r\n      <mat-error *ngIf=\"signUpForm.get('email')?.hasError('pattern')\">Adresă de email invalidă</mat-error>\r\n      <mat-icon matSuffix>alternate_email</mat-icon>\r\n      <mat-error *ngIf=\"signUpForm.get('email')?.hasError('pattern')\">Email invalid</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"example-full-width\">\r\n      <mat-label>Parolă</mat-label>\r\n      <input matInput formControlName=\"password\" #password [type]=\"hide ? 'password' : 'text'\" />\r\n      <button\r\n        type=\"button\"\r\n        mat-icon-button\r\n        matSuffix\r\n        (click)=\"hide = !hide\"\r\n        [attr.aria-label]=\"'Hide password'\"\r\n        [attr.aria-pressed]=\"hide\">\r\n        <mat-icon>{{ hide ? 'visibility_off' : 'visibility' }}</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n\r\n    <div class=\"actions\">\r\n      <button id=\"signUpBtn\" mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!signUpForm.valid\">\r\n        Sign-up\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-verify-email',\r\n  templateUrl: './user-verify-email.component.html',\r\n  styleUrls: ['./user-verify-email.component.scss'],\r\n})\r\nexport class UserVerifyEmailComponent {\r\n  constructor(private router: Router) {}\r\n\r\n  onRouteLogin() {\r\n    this.router.navigate(['login']);\r\n  }\r\n}\r\n","<div class=\"displayTable\">\r\n  <div class=\"displayTableCell\">\r\n    <div class=\"authBlock\">\r\n      <h3>Îți mulțumim!</h3>\r\n      <div class=\"formGroup\">\r\n        <p class=\"text-center\">\r\n          Cerere îregistrata cu succes.<br />Vă rugăm să vă verificați e-mailul pentru a vă reseta parola.\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div class=\"redirectToLogin\">\r\n      <button mat-raised-button color=\"primary\" (click)=\"onRouteLogin()\">Înapoi la Login</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss'],\r\n})\r\nexport class UserComponent {}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UserComponent } from './components/user.component';\r\nimport { UserLoginComponent } from './components/user-login/user-login.component';\r\nimport { UserSignUpComponent } from './components/user-sign-up/user-sign-up.component';\r\nimport { UserForgotPasswordComponent } from './components/user-forgot-password/user-forgot-password.component';\r\nimport { UserVerifyEmailComponent } from './components/user-verify-email/user-verify-email.component';\r\n\r\nconst ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserComponent,\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: UserLoginComponent,\r\n  },\r\n  {\r\n    path: 'sign-up',\r\n    component: UserSignUpComponent,\r\n  },\r\n  {\r\n    path: 'forgot-password',\r\n    component: UserForgotPasswordComponent,\r\n  },\r\n  {\r\n    path: 'verify-email',\r\n    component: UserVerifyEmailComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(ROUTES)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UserRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport { GoogleAuthProvider, getAuth, createUserWithEmailAndPassword } from '@angular/fire/auth';\r\nimport { AngularFirestore, AngularFirestoreDocument, DocumentData } from '@angular/fire/compat/firestore';\r\nimport { Observable, combineLatest, of } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { Doctor } from '../interfaces/doctor.interface';\r\nimport { Admin } from '../interfaces/admin.interface';\r\nimport { Patient } from '../interfaces/patient.interface';\r\nimport { Router } from '@angular/router';\r\nimport { initializeApp, deleteApp } from '@angular/fire/app';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  user$: Observable<Patient | Doctor | Admin | null>;\r\n\r\n  secondaryApp = initializeApp(environment.firebase, 'SecondaryApp');\r\n  secondaryAppAuth = getAuth(this.secondaryApp);\r\n\r\n  constructor(\r\n    private afAuth: AngularFireAuth,\r\n    private afs: AngularFirestore,\r\n    public router: Router\r\n  ) {\r\n    this.user$ = this.afAuth.authState.pipe(\r\n      switchMap(user => {\r\n        if (user) {\r\n          const patientDoc = this.afs.doc<Patient>(`patients/${user.uid}`).valueChanges();\r\n          const doctorDoc = this.afs.doc<Doctor>(`doctors/${user.uid}`).valueChanges();\r\n          const adminDoc = this.afs.doc<Admin>(`admin/${user.uid}`).valueChanges();\r\n\r\n          return combineLatest([patientDoc, doctorDoc, adminDoc]).pipe(\r\n            map(([patientData, doctorData, adminData]) => {\r\n              if (patientData) {\r\n                return patientData;\r\n              } else if (doctorData) {\r\n                return doctorData;\r\n              } else {\r\n                return adminData || null;\r\n              }\r\n            })\r\n          );\r\n        } else {\r\n          return of(null);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  getUserRole(userId: string | null): Observable<string | null> {\r\n    const patientDoc = this.afs.doc<Patient>(`patients/${userId}`).valueChanges();\r\n    const doctorDoc = this.afs.doc<Doctor>(`doctors/${userId}`).valueChanges();\r\n    const adminDoc = this.afs.doc<Admin>(`admin/${userId}`).valueChanges();\r\n\r\n    return combineLatest([patientDoc, doctorDoc, adminDoc]).pipe(\r\n      map(([patientData, doctorData, adminData]) => {\r\n        if (patientData && patientData.role === 'patient') {\r\n          return 'patient';\r\n        } else if (doctorData && doctorData.role === 'doctor') {\r\n          return 'doctor';\r\n        } else if (adminData && adminData.role === 'admin') {\r\n          return 'admin';\r\n        } else {\r\n          return null;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  getCurrentUserUid(): Promise<string | null> {\r\n    return this.afAuth.currentUser\r\n      .then(user => {\r\n        return user ? user.uid : null;\r\n      })\r\n      .catch(() => null);\r\n  }\r\n\r\n  pacientSignUp(pass: string, patient: Patient) {\r\n    return this.afAuth\r\n      .createUserWithEmailAndPassword(patient.email, pass)\r\n      .then(result => {\r\n        if (!result.user) {\r\n          return;\r\n        }\r\n        const userRef: AngularFirestoreDocument<DocumentData> = this.afs.doc(`patients/${result.user.uid}`);\r\n\r\n        const patientData = {\r\n          uid: result.user.uid,\r\n          email: patient.email,\r\n          imageUrl: patient.imageUrl,\r\n          displayName: patient.lastName + ' ' + patient.firstName,\r\n          gender: patient.gender,\r\n          phone: patient.phone,\r\n          role: 'patient',\r\n        };\r\n\r\n        return userRef.set(patientData, {\r\n          merge: true,\r\n        });\r\n      })\r\n      .catch(err => Promise.reject(err));\r\n  }\r\n\r\n  doctorSignUp(pass: string, doctor: Doctor) {\r\n    return createUserWithEmailAndPassword(this.secondaryAppAuth, doctor.email, pass)\r\n      .then(result => {\r\n        if (!result.user) {\r\n          return;\r\n        }\r\n        const userRef: AngularFirestoreDocument<DocumentData> = this.afs.doc(`doctors/${result.user.uid}`);\r\n\r\n        const doctorData = {\r\n          uid: result.user.uid,\r\n          email: doctor.email,\r\n          password: doctor.password,\r\n          imageUrl: doctor.imageUrl,\r\n          lastName: doctor.lastName,\r\n          firstName: doctor.firstName,\r\n          displayName: doctor.firstName + ' ' + doctor.lastName,\r\n          phone: doctor.phone,\r\n          adress: doctor.adress,\r\n          gender: doctor.gender,\r\n          description: doctor.description,\r\n          specialtyIds: doctor.specialtyIds,\r\n          role: 'doctor',\r\n        };\r\n\r\n        return userRef.set(doctorData, {\r\n          merge: true,\r\n        });\r\n      })\r\n      .catch(err => Promise.reject(err))\r\n      .finally(() => {\r\n        this.secondaryAppAuth.signOut();\r\n      });\r\n  }\r\n\r\n  signIn(email: string, pass: string) {\r\n    return this.afAuth.signInWithEmailAndPassword(email, pass).catch(err => Promise.reject(err));\r\n  }\r\n\r\n  patientGoogleSignIn() {\r\n    return this.afAuth\r\n      .signInWithPopup(new GoogleAuthProvider())\r\n      .then(result => {\r\n        if (!result.user) {\r\n          return;\r\n        }\r\n        const userRef: AngularFirestoreDocument<any> = this.afs.doc(`patients/${result.user.uid}`);\r\n\r\n        const patientData = {\r\n          uid: result.user.uid,\r\n          email: result.user.email,\r\n          imageUrl: result.user.photoURL,\r\n          displayName: result.user.displayName,\r\n          gender: null,\r\n          phone: result.user.phoneNumber,\r\n          role: 'patient',\r\n        };\r\n\r\n        return userRef.set(patientData, {\r\n          merge: true,\r\n        });\r\n      })\r\n      .catch(err => Promise.reject(err));\r\n  }\r\n\r\n  signOut() {\r\n    return this.afAuth.signOut();\r\n  }\r\n\r\n  sendPasswordResetEmail(email: string) {\r\n    return this.afAuth\r\n      .sendPasswordResetEmail(email)\r\n      .then(() => {\r\n        this.router.navigate(['verify-email']);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error sending password reset email:', error);\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport {\r\n  Firestore,\r\n  collectionData,\r\n  collection,\r\n  doc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  DocumentData,\r\n  getDoc,\r\n  query,\r\n  where,\r\n} from '@angular/fire/firestore';\r\n\r\nimport { Doctor } from '../interfaces/doctor.interface';\r\nimport { Observable, from } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DoctorService {\r\n  constructor(\r\n    private firestore: Firestore,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  addDoctor(pass: string, doctor: Doctor) {\r\n    this.authService.doctorSignUp(pass, doctor);\r\n  }\r\n\r\n  queryDoctors(id: string) {\r\n    const doctorsRef = collection(this.firestore, 'doctors');\r\n    const queryResponse = query(doctorsRef, where('specialtyIds', 'array-contains', id));\r\n\r\n    return collectionData(queryResponse, { idField: 'id' });\r\n  }\r\n\r\n  getDoctors(): Observable<DocumentData[]> {\r\n    const doctorCollection = collection(this.firestore, 'doctors');\r\n    return collectionData(doctorCollection, { idField: 'id' });\r\n  }\r\n\r\n  getDoctor(id: string): Observable<DocumentData> {\r\n    const selectedDoctor = doc(this.firestore, 'doctors', id);\r\n\r\n    return from(getDoc(selectedDoctor));\r\n  }\r\n\r\n  updateDoctor(id: string, updatedData: DocumentData): Observable<void> {\r\n    const selectedDoctor = doc(this.firestore, 'doctors', id);\r\n\r\n    if (!updatedData['imageUrl']) {\r\n      delete updatedData['imageUrl'];\r\n    }\r\n\r\n    return from(updateDoc(selectedDoctor, updatedData));\r\n  }\r\n\r\n  deleteDoctor(id: string): Observable<void> {\r\n    const selectedDoctor = doc(this.firestore, 'doctors', id);\r\n    return from(deleteDoc(selectedDoctor));\r\n  }\r\n\r\n  updateImage(id: string, imageUrl: string) {\r\n    if (!imageUrl) {\r\n      console.error('Image URL is undefined or empty');\r\n      return;\r\n    }\r\n\r\n    const docInstance = doc(this.firestore, 'doctors', id);\r\n    updateDoc(docInstance, {\r\n      imageUrl: imageUrl,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFireStorage } from '@angular/fire/compat/storage';\r\nimport { Observable, from } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ImageUploadService {\r\n  constructor(private afStorage: AngularFireStorage) {}\r\n\r\n  uploadImage(file: File, pathName: string): Observable<string> {\r\n    const filePath = `${pathName}/` + file.name;\r\n    const fileRef = this.afStorage.ref(filePath);\r\n    const task = this.afStorage.upload(filePath, file);\r\n\r\n    return from(task).pipe(switchMap(() => fileRef.getDownloadURL()));\r\n  }\r\n}\r\n","import { inject } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivateChildFn,\r\n  CanActivateFn,\r\n  Router,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { take, map } from 'rxjs/operators';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\nexport const patientAuthGuard: CanActivateFn = () => {\r\n  const authService = inject(AuthService);\r\n  const router = inject(Router);\r\n\r\n  return authService.user$.pipe(\r\n    take(1),\r\n    map(user => {\r\n      if (!user) {\r\n        router.navigate(['login']);\r\n      }\r\n\r\n      if (user?.role === 'doctor') {\r\n        router.navigate(['']);\r\n      }\r\n\r\n      return user?.role === 'patient' || user?.role === 'admin';\r\n    })\r\n  );\r\n};\r\n\r\nexport const patientAuthGuardChild: CanActivateChildFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) =>\r\n  patientAuthGuard(route, state);\r\n\r\nexport const doctorAuthGuard: CanActivateFn = () => {\r\n  const authService = inject(AuthService);\r\n  const router = inject(Router);\r\n\r\n  return authService.user$.pipe(\r\n    take(1),\r\n    map(user => {\r\n      if (!user) {\r\n        router.navigate(['login']);\r\n      }\r\n\r\n      if (user?.role === 'patient') {\r\n        router.navigate(['homepage']);\r\n      }\r\n\r\n      return user?.role === 'doctor' || user?.role === 'admin';\r\n    })\r\n  );\r\n};\r\n\r\nexport const doctorAuthGuardChild: CanActivateChildFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) =>\r\n  doctorAuthGuard(route, state);\r\n\r\nexport const adminAuthGuard: CanActivateFn = () => {\r\n  const authService = inject(AuthService);\r\n  const router = inject(Router);\r\n\r\n  return authService.user$.pipe(\r\n    take(1),\r\n    map(user => {\r\n      if (!user) {\r\n        router.navigate(['login']);\r\n      }\r\n\r\n      if (user?.role === 'doctor' || user?.role === 'patient') {\r\n        router.navigate(['homepage']);\r\n      }\r\n\r\n      return user?.role === 'admin';\r\n    })\r\n  );\r\n};\r\n\r\nexport const adminAuthGuardChild: CanActivateChildFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) =>\r\n  adminAuthGuard(route, state);\r\n","export const environment = {\r\n  firebase: {\r\n    projectId: 'int-clinic',\r\n    appId: '1:981743238567:web:4d762ad80a0a1aef760a82',\r\n    storageBucket: 'int-clinic.appspot.com',\r\n    apiKey: 'AIzaSyDT6naFYtKTQupxrzWdb315TvM00aOpZvE',\r\n    authDomain: 'int-clinic.firebaseapp.com',\r\n    messagingSenderId: '981743238567',\r\n  },\r\n  // firebase: {\r\n  //   apiKey: 'AIzaSyDxj2Ck2tJZE_0XPa6ir5Jja5Sxqjlhbb8',\r\n  //   authDomain: 'int-clinic2.firebaseapp.com',\r\n  //   projectId: 'int-clinic2',\r\n  //   storageBucket: 'int-clinic2.appspot.com',\r\n  //   messagingSenderId: '631089025506',\r\n  //   appId: '1:631089025506:web:6cf1079bc6b9d89c6069bb',\r\n  // },\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["RouterModule","HomePageComponent","doctorAuthGuardChild","patientAuthGuardChild","adminAuthGuardChild","routes","path","component","canActivateChild","loadChildren","then","m","AdminModule","PatientModule","DoctorModule","UserModule","AppRoutingModule","forRoot","imports","i1","exports","AppComponent","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","BrowserModule","initializeApp","provideFirebaseApp","environment","provideAuth","getAuth","AngularFireAuthModule","provideFirestore","getFirestore","FormsModule","ReactiveFormsModule","AuthService","FIREBASE_OPTIONS","BrowserAnimationsModule","MatInputModule","MatFormFieldModule","DoctorService","ConfirmationDialogComponent","MatDialogModule","MatButtonModule","MatTabsModule","MatCardModule","MatSidenavModule","MatListModule","UserRoutingModule","MatToolbarModule","MatIconModule","NavigationBarComponent","MatMenuModule","AppModule","bootstrap","provide","useValue","firebase","declarations","FirebaseAppModule","i2","AuthModule","i3","FirestoreModule","MAT_DIALOG_DATA","constructor","data","dialogRef","cancel","close","value","confirm","ɵɵdirectiveInject","MatDialogRef","consts","ConfirmationDialogComponent_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ConfirmationDialogComponent_Template_button_click_7_listener","ConfirmationDialogComponent_Template_button_click_9_listener","ɵɵadvance","ɵɵtextInterpolate","title","message","cancelText","confirmText","HomePageComponent_div_8_div_4_Template_button_click_1_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","onClickManageSite","HomePageComponent_div_8_Template_button_click_2_listener","_r5","ctx_r4","onClickGetAppoinment","ɵɵtemplate","HomePageComponent_div_8_div_4_Template","ɵɵproperty","ctx_r0","loggedUser","isDoctor","router","authService","ngOnInit","user$","subscribe","user","isAdmin","role","isPatient","navigate","Router","HomePageComponent_Template","HomePageComponent_div_8_Template","NavigationBarComponent_div_10_Template_button_click_12_listener","_r8","ctx_r7","onLogOut","_r6","ɵɵtextInterpolate1","displayName","signOut","NavigationBarComponent_Template","NavigationBarComponent_li_5_Template","NavigationBarComponent_li_6_Template","NavigationBarComponent_li_7_Template","NavigationBarComponent_div_9_Template","NavigationBarComponent_div_10_Template","ɵɵpureFunction0","_c0","UserForgotPasswordComponent","email","resetPassword","sendPasswordResetEmail","console","log","catch","error","UserForgotPasswordComponent_Template","UserForgotPasswordComponent_Template_form_ngSubmit_8_listener","UserForgotPasswordComponent_Template_input_ngModelChange_13_listener","$event","_r0","valid","FormControl","FormGroup","Validators","UserLoginComponent","hide","users","password","loginForm","required","pattern","validators","onLogin","controls","signIn","getCurrentUserUid","getUserRole","code","onLoginWithGoogle","patientGoogleSignIn","onRouterSignUp","UserLoginComponent_Template","UserLoginComponent_Template_button_click_4_listener","UserLoginComponent_mat_error_16_Template","UserLoginComponent_Template_button_click_21_listener","UserLoginComponent_Template_button_click_27_listener","tmp_2_0","get","hasError","ɵɵattribute","patientImage","ɵɵsanitizeUrl","ctx_r1","UserSignUpComponent","imageUploadService","signUpForm","lastName","nonNullable","firstName","gender","phone","imageUrl","onSignUp","pacientSignUp","getRawValue","reset","uploadImage","event","file","target","files","downloadURL","ImageUploadService","UserSignUpComponent_Template","UserSignUpComponent_Template_form_ngSubmit_1_listener","UserSignUpComponent_img_3_Template","UserSignUpComponent_Template_input_change_6_listener","UserSignUpComponent_div_7_Template","UserSignUpComponent_mat_error_33_Template","UserSignUpComponent_mat_error_39_Template","UserSignUpComponent_mat_error_42_Template","UserSignUpComponent_Template_button_click_48_listener","tmp_3_0","tmp_4_0","tmp_5_0","UserVerifyEmailComponent","onRouteLogin","UserVerifyEmailComponent_Template","UserVerifyEmailComponent_Template_button_click_11_listener","UserComponent","UserComponent_Template","ROUTES","forChild","GoogleAuthProvider","createUserWithEmailAndPassword","combineLatest","of","map","switchMap","afAuth","afs","secondaryApp","secondaryAppAuth","authState","pipe","patientDoc","doc","uid","valueChanges","doctorDoc","adminDoc","patientData","doctorData","adminData","userId","currentUser","pass","patient","result","userRef","set","merge","err","Promise","reject","doctorSignUp","doctor","adress","description","specialtyIds","finally","signInWithEmailAndPassword","signInWithPopup","photoURL","phoneNumber","ɵɵinject","AngularFireAuth","AngularFirestore","factory","ɵfac","providedIn","collectionData","collection","updateDoc","deleteDoc","getDoc","query","where","from","firestore","addDoctor","queryDoctors","id","doctorsRef","queryResponse","idField","getDoctors","doctorCollection","getDoctor","selectedDoctor","updateDoctor","updatedData","deleteDoctor","updateImage","docInstance","Firestore","afStorage","pathName","filePath","name","fileRef","ref","task","upload","getDownloadURL","AngularFireStorage","inject","take","patientAuthGuard","route","state","doctorAuthGuard","adminAuthGuard","projectId","appId","storageBucket","apiKey","authDomain","messagingSenderId","__NgCli_bootstrap_1","platformBrowser","bootstrapModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}